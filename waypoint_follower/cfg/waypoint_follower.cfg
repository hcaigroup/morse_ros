#!/usr/bin/env python
PACKAGE = "waypoint_follower"
import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

# PID controller params
gen.add("trans_angle_range", double_t, 0, "At what goal angle robot may move forward and turn", 1.2, 0, 3.14)
gen.add("initial_trans_angle_range", double_t, 0, "At what goal angle robot may move forward and turn at the start of a path", 0.9, 0, 3.14)
gen.add("max_trans_vel", double_t, 0, "max velocity in dm/s", 6.0, 0, 20)
gen.add("pid_trans_kp", double_t, 0, "max velocity potential gain", .3, 0, 1)
gen.add("max_rot_vel", double_t, 0, "max rotation velocity in goal deg/s", 45, 0, 180)
gen.add("wp_max_rot_vel", double_t, 0, "max rotation velocity in waypoint deg/s", 35, 0, 180)
gen.add("pid_rot_kp", double_t, 0, "rotation potential gain", .8, 0, 5)
gen.add("success_distance", double_t, 0, "when goal is considered reached in m", 0.09, 0.01, 1.0)
gen.add("wp_success_distance", double_t, 0, "When waypoint is considered reached in m", 0.27, 0.1, 1.0)
gen.add("az_success_distance", double_t, 0, "Angle tolerance in goal", .5, 0, 1)


gen.add("speed_adaption_step_distance", double_t, 0, "by how much of the original max speed we reduce the max speed in each cycle to find a non-colliding suitable speed", .19, 0, 1)
gen.add("collision_distance", double_t, 0, "At what min distance a collision is probable", 0.9, 0, 2)
gen.add("projection_timespan", double_t, 0, "", 4, 0, 20)


# gen.add("bool_param", bool_t, 0, "A Boolean parameter", True)


exit(gen.generate(PACKAGE, "waypoint_follower", "WaypointFollower"))
